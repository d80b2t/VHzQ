Description of main table types used in W/VSERV1000 releases.

The databases are relational SQL databases, using Microsoft SQL Server, and are built
upon the existing tables used in the VISTA Data Flow System (VDFS), i.e. WFCAM Science Archive 
(WSA; Hambly et al. 2008) and VISTA Science Archive (VSA; Cross et al. 2012). Therefore tables 
archiving the image file metadata, such as Multiframe, MultiframeDetector, ProgrammeFrame, CurrentAstrometry 
are the same, and the frames that overlap with the QSOs have been grouped together into special programmes
(WSERV1000 and VSERV1000, each with programmeID=10999). 

In addition to the existing tables, we have developed new tables to curate and effectively archive matched aperture
products (MAP). These are not described in the aboce papers, but some have been partially described in a conference proceeding
(Cross et al. 2013). Some of the MAP tables use similar attributes to existing VDFS tables for extracted detections, and 
reuse some of the same software to process them.

The most relevant of the original tables are Multiframe and MultiframeDetector which have the overall metadata for each image 
and the metadata for each detector extension respectively. The useful metadata include in Multiframe include filterID (Z=1, 
Y=2, J=3, H=4 and K/Ks=5), the mjdObs, the project (e.g. VHS, LAS), and in MultiframeDetector attributes like totalExpTime. 
The quality control (deprecated in each table) is not consistent across the frames since it is applied partly in response to 
the requirements and energy of the survey PIs, or for smaller PIs projects it is applied automatically if that data has been 
released. In all cases the frames used are stacks created in a single Observing Block, not raw (normal) frames, tiles or 
deep stacks or mosaics. One other useful table is Filter, which lists the properties of the filters, including VegaToAB. 
These values have been updated to the values in the paper. 

The new tables can be broken down into a few types:

New curation tables:
* RequiredMatchedApertureProduct
* RequiredMapAverages
* MapSurveyTables

New metadata tables:
* MapFrameStatus
* MapCatalogueDetector
* MapProvenance

New data tables:
* finalQsoCatalogue
* MapApertureIDshighzQsoMap
* w/vserv1000MapRemeasurement
* w/vserv1000MapRemeasAver
* w/vserv1000MapAverageWeights

The curation tables are setup to describe the requirements and are necessary for the processing. These are not usually required by 
scientists when working with the data, although RequiredMapAverages will be of use.

RequiredMatchedApertureProduct describes each matched aperture setup: which matched aperture extractor to use, where the 
data that makes up the input list comes from, what type of product is being created: e.g. a band-merged table, 
or in this case, multi-epoch data. For WSERV1000 and VSERV1000, we have one product defined with QSOs selected 
from finalQsoCatalogue. It is of little use to scientists.

RequiredMapAverages gives a set of averages modes to be used. For W/VSERV1000, we have setup 9 modes, mostly different time scales,
so that we can find the optimal time-resolution to signal-to-noise ratio for all the different QSOs observed.

MapSurveyTables gives information on where to find the data and attributes in MapApertureIDsXXX. It is of no use to scientists.

The metadata tables help link the data tables and provide overall information for a catalogue.

MapFrameStatus is the most important, since it gives a list of catalogues produced for a MAP. Each catalogue (catName) 
is a catalogue created from an image (when multiframeID>0) using the extractor (imcore_list) and the input list of QSOs, 
or it is created by averaging the photometry in a set of catalogues (multiframeID=-99999999). Some of the attributes 
(ppErrBitsStatus, bitProcessingFlag, isIngested, cuEventUD) are only for curation purpose, but the link between 
catalogueID and multiframeID is essential for linking back to the image data.

MapCatalogueDetector is designed to include data important for particular extensions, and as yet only includes the 
normalised softening parameter for luptitudes. Given the very heterogeneous nature of W/VSERV1000 data, we don't 
recommend using luptitudes, so this table will be of little use.

MapProvenance is essential to use when using w/vserv1000MapRemeasAver. It links the combined catalogue to to component catalogues, 
and the avSetupID points to the averaging mode in RequiredMapAverages. For instance, in VSERV1000v20181217, combiCatID=55178 
links to catalogueIDs 50933 and 53903 when averaged over all epochs (avSetup=0). 

The data tables contain most of the important data.

finalQsoCatalogue is the table listing the 463 QSOs used in this project, and lists the surveys they came from, the positions, 
redshifts and derived parameters such as M1450.

MapApertureIDshighzQsoMap stores the list of apertures. While this may seem an unnecessary step since IDs and positions 
are already in finalQsoCatalogue, this abstraction is necessary for other MAP cases. The apertureIDs in the following tables 
come from here.

w/vserv1000MapRemeasurement tables contain the forced photometry from images in the apertures given in 
MapApertureIDshighzQsoMap. Each row has a unique apertureID, catalogueID combination. The rest of the structure is similar
to a Detection table, such as those in UKIDSS/VISTA surveys which have a recording of each extracted object, so if
you run your `image extractor', you get you positions, fluxes, etc. Another difference between Detection and MapRemeasurement  
is that you can expect more of the fluxes measurements to be negative, in MapRemeasurement, and indeed some of the objects 
you might expect *all* the measurements to have negative fluxes in the MapRemeasurement tables, so we provide luptitudes 
(e.g. aperLup3) and calibrated fluxes (e.g. aperJky3), since the magnitude system does not work for negative fluxes.

w/vserv1000MapRemeasAver tables contain the average forced photometry defined by averaging measurements in catalogues given
in MapProvenance. The weighting is done by the error on a particular attribute in w/vserv1000MapRemeasurement, if given, or by a weight. 
In the case of VSERV1000, the weight is averageConf (median 100), and in the case of WSERV1000 it is set as 100. The average
attributes are similar to the extracted attributes, but attributes such as the raw, uncalibrated fluxes (e.g. aperFlux3) are
not averaged, since this makes little sense. Indeed photometry is averaged on the linear calibrated fluxes (aperJky3), and then
converted to magnitudes and luptitudes. Like w/vserv1000MapRemeasurement each row is defined by a unique apertureID, catalogueID 
combination.

w/vserv1000MapAverageWeights gives the weights of each object in a particular combined catalogue and each row has a unique 
apertureID, combiCatID and catalogueID, specifying both the raw image catalogue and the averaged catalogue, since some objects, e.g.
an object with poor quality flags, may have a zero weight if there are lots of other good quality measurements, but have some weight
if all other measurements are poor quality.

How to most effectively use the database:

Below are some examples of queries to get scientifically useful data back. These demonstrate how to use the tables together.


1) Select best magnitude in each band for each QSO.

If you want a single measurement in each band for each QSO, then the best value comes from averaging over all epochs, i.e. the
values in v/wserv1000MapRemeasAver selected from the appropriate catalogues created from the appropriate averaging. We have 
also corrected the Vega magnitudes in the archive to AB. The following query can be run on the VSA. Change vserv1000 to 
wserv1000 for the WSA.

SELECT qso.qsoName,qso.qsoID,qso.ra,qso.dec,aver.filterID,(aver.aperMag3+f.VegaToAB) as aperMag3AverAB,aver.aperMag3Err,aver.ppErrBits 
/* Select basic QSO parameters and photometry averaged over all epochs. ppErrBits gives some quality control information.
It is safest to add an alias to each attribute to avoid confusion.
*/ 
FROM finalQsoCatalogue as qso, MapApertureIDshighzQsoMap as ma, vserv1000MapRemeasAver as aver, Filter as f,
/* Select main tables for query, giving each an appropriate alias (e.g. as qso). MapApertureIDshighzQsoMap links 
finalQsoCatalogue to vserv1000MapRemeasAver */ 
(SELECT distinct combiCatID FROM MapProvenance WHERE avSetupID=0) as mapAvSetup 
/* Create a temporary table in memory of only average catalogues that are created with avSetupID=0, i.e. 
averaged over all epochs. Using distinct is very important since MapProvenance has multiple rows for each 
averaged catalogue */ 
WHERE qso.qsoID=ma.objectID and ma.apertureID=aver.apertureID and aver.catalogueID=mapAvSetup.combiCatID and 
f.filterID=aver.filterID
/* Join all the tables correctly. finalQsoCatalogue is linked to MapApertureIDshighzQsoMap with qsoID=objectID. 
The apertureID in MapApertureIDshighzQsoMap links to vserv1000MapRemeasurement or vserv1000MapRemeasAver.
The temporary table gives the correct list of combiCatIDs that constrain the catalogueID in vserv1000MapRemeasAver.
*/ 
ORDER BY qso.qsoID,aver.filterID 
/* Order by qsoID and filterID */

2) Select a light-curve for a QSO.
 2.1 Select the light curve from epoch frame photometry 
 
SELECT qso.qsoName,m.mjdObs,remeas.filterID,(remeas.aperMag3+f.VegaToAB) as aperMag3AverAB,remeas.aperMag3Err,
remeas.ppErrBits 
/* Select basic QSO parameters and photometry extracted from each OB epoch. */ 
FROM finalQsoCatalogue as qso, MapApertureIDshighzQsoMap as ma, vserv1000MapRemeasurement as remeas, Filter as f,
Multiframe as m,MapFrameStatus as mfs 
/* Select main tables for query. MapApertureIDshighzQsoMap joins finalQsoCatalogue to vserv1000MapRemeasurement */ 
WHERE qso.qsoID=ma.objectID and ma.apertureID=remeas.apertureID and remeas.catalogueID=mfs.catalogueID and 
mfs.multiframeID=m.multiframeID and f.filterID=m.filterID 
/* Join all the tables correctly MapFrameStatus links the catalogueID to the multiframeID, which allows us to link to 
the image metadate in Multiframe to get the observation time (mjdObs) */ 
and qso.qsoID=54 
/* Select a particular QSO, qsoID=54 (MMTJ0215-0529) */
ORDER BY qso.qsoID,remeas.filterID 
/* Order by qsoID and filterID */


 2.2 Select a light curve averaged over 1 month. This gives higher signal to noise than a light-curve from each epoch,
 but with fewer points (lower time resolution). 

SELECT qso.qsoName,aver.filterID,AVG(m.mjdObs) as mjd,(MAX(m.mjdObs)-MIN(m.mjdObs)) as duration,
aver.aperJky3, aver.aperJky3Err,(aver.aperMag3+f.VegaToAB) as aperMag3Ab,aver.aperMag3Err, aver.ppErrBits,
COUNT(mfs.catalogueID) as nMeas,SUM(d.totalExpTime) as totExpTime 
/* In this selection we have included the average mjdObs (averaged over all frames in a 30 period) and the 
duration (the mjd of the last frame in the period minus that of the first), the number of frames (nMeas) and 
the sum of the integration times. We have also included the calibrated fluxes (aperJky3), since in many 
cases the a faint source may have very low S/N */ 
FROM finalQsoCatalogue as qso,MapApertureIDshighzQsoMap as ma, vserv1000MapRemeasAver as aver,MapProvenance as mp,
MapFrameStatus as mfs,MultiframeDetector as d,Multiframe as m,Filter as f, vserv1000MapRemeasurement as remeas 
/* The tables to select from include MapProvenance to select the correct averaging time scale and to get the frames 
used in each average catalogue. Also include MultiframeDetector to get the integration time. */ 
WHERE qso.qsoID=ma.objectID and ma.apertureID=aver.apertureID and mp.combiCatID=aver.catalogueID and mp.avSetupID=3 and 
/* Do joins and select avSetupID=3 --> average over 30 days. Other avSetupID values can be used to change the averaging 
timescale */ 
mp.catalogueID=mfs.catalogueID and d.multiframeID=mfs.multiframeID and mfs.catalogueID=remeas.catalogueID and 
remeas.apertureID=aver.apertureID and remeas.extNum=d.extNum and qsoID=54 and f.filterID=d.filterID and 
m.multiframeID=d.multiframeID 
/* Select qsoID=54 */ 
GROUP BY qso.qsoName,aver.filterID, aver.aperJky3,aver.aperJky3Err,aver.aperMag3,aver.aperMag3Err,aver.ppErrBits,f.VegaToAB 
/* GROUP BY attributes that are part of are associated with the average so that we get statistics for properties 
measured at the frame level */

3) Get integration times for each QSO, band

4) Get project information for data that was used for a given QSO

5) Get number of QSOs in VSA data in Ks band

6) Get NIR data for QSOs with 6.0<z<6.5

7) Select NIR data for VDES QSOs

8) Select NIR data for QSOs with M1450...


